/*
 * Copyright (c) 2020 Giorgio Antonioli
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    apply from: rootProject.file("build-tools/repositories.gradle"), to: buildscript
    apply from: rootProject.file("build-tools/parse-dependencies.gradle")

    dependencies {
        classpath deps.androidPlugin
        classpath deps.dokkaPlugin
        classpath deps.gitHubReleasePlugin
        classpath deps.gradleMavenPublishPlugin
        classpath deps.kotlinPlugin
        classpath deps.kpermissionsBuildTools
        classpath deps.ktlint
        classpath deps.releasesHubPlugin
    }
}

allprojects {
    apply from: rootProject.file("build-tools/repositories.gradle")
    apply from: rootProject.file("build-tools/kotlin.gradle")
    // Adds the version of this library to all the projects, including the root project.
    apply plugin: "kpermissions-version"
}

apply plugin: "com.dipien.releaseshub.gradle.plugin"

releasesHub {
    autoDetectDependenciesPaths = false
    dependenciesPaths = ["build-tools/src/main/kotlin/Deps.kt"]
    pullRequestLabels = ["dependencies"]
    headBranchPrefix = "update-dependency/"
    gitHubRepositoryOwner = "fondesa"
    gitHubRepositoryName = "kpermissions"
    excludes = [
            // Excluded because since the version 3.1.0 the minimum supported Android version is 21.
            "io.reactivex.rxjava3:rxjava"
    ]
}

apply plugin: "com.github.breadmoirai.github-release"

// The release assets will be configured through kpermissions-deploy.
githubRelease {
    owner "fondesa"
    repo "kpermissions"
    tagName version
    releaseName "KPermissions $version"
    body "TBD"
    draft true
}
def gitHubToken = project.properties["github.token"] ?: System.getenv("GITHUB_TOKEN")
if (gitHubToken != null) {
    githubRelease.token = gitHubToken
    releasesHub.gitHubWriteToken = gitHubToken
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

// Use "all" as the default distribution-type of the Gradle Wrapper.
wrapper.distributionType = Wrapper.DistributionType.ALL
